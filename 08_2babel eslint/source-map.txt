devtool: https://www.webpackjs.com/configuration/devtool/
官网详细讲解
source-map 就是方便调试

***vue中直接设置的是source-map
***react会有判断

==以下不会生成source-map==
*** [生产]推荐使用 false   报错不会定位到源文件
*** [生产]推荐使用 "none"  dev模式下, 设置为none会报错, 不匹配.
        prod模式默认为none, 同样报错.
        none => 理解为 不设置devtool.
'eval'  dev模式默认值. eval函数中会有一行注释: sourceURL=webpack://xxxxx/xxxxx.... 报错后可以查看源码.[大概的源码]
        prod模式默认值, eval函数中没有注释.????

==以下会生成source-map[还原代码,包括注释]==
'source-map'
'eval-source-map'   不生产xxx.js.map文件, 会生成到打包代码中, eval函数中最后面. 转为DataUrl. 报错后不会生成未加载的代码
'inline-source-map' 放到打包后的js文件中, 最后. 报错不影响全部代码的展示.
'cheap-source-map'  没有列映射(column mapping)的 source map, 忽略 loader source map

*** [开发|测试]推荐使用 'cheap-module-source-map'   没有列映射(column mapping)的 source map, 来自于loader的source map支持更好

'hidden-source-map' 与 source-map 相同，但不会为 bundle 添加引用注释。如果你只想 source map 映射那些源自错误报告的错误堆栈跟踪信息，但不想为浏览器开发工具暴露你的 source map，这个选项会很有用。

'nosources-source-map' 创建的 source map 不包含 sourcesContent(源代码内容)。它可以用来映射客户端上的堆栈跟踪，而无须暴露所有的源代码。你可以将 source map 文件部署到 web 服务器。
--- 这种东西其实可以做到用户电脑代码追踪, 但是可能会造成源码泄漏


组合语法
[inline-|hidden-|eval-][nosources-][cheap-[module-]]source-map